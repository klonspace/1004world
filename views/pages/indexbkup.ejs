<!doctype html>
<html>
  <head>
    <title>Socket.IO chat</title>
    <style>
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { font: 13px Helvetica, Arial; }
      form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; color: white }
      form input { border: 0; padding: 10px; width: 45%; margin-right: .5%; }
      form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }
      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages li { padding: 5px 10px; }
      #messages li:nth-child(odd) { background: #eee; }
    </style>
  </head>
  <body>
    <ul id="messages"></ul>
    <form action="" id="chatBox">
        <% if(isLoggedIn){ %>
          <h1>You are logged in as <%= user.username %> <a href="/logout">logout</a></h1>
       <% } else{ %>
          <h1>you are not logged in <a href="/login">login</a></h1>
        <% } %>
      message <input id="m" autocomplete="off" />
      <button>Send</button>
    </form>
  </body>
  <script src="socket.io.js"></script>
  <script>
    var socket = io();
    document.getElementById('chatBox').addEventListener("submit", function(e){
      e.preventDefault(); // prevents page reloading
      // var msg = {
      //   user : document.getElementById("u").value,
      //   msgContent : document.getElementById("m").value,
      //   timeStamp : new Date().getTime()
      // };
      // console.log(msg)
      // socket.emit('chat message', JSON.stringify(msg));
      //document.getElementById("m").value = "";

        const data =  postData('/addChat', { msgContent: document.getElementById("m").value });
        console.log(data); // JSON-string from `response.json()` call
      return false;
    });
    socket.on('connect', () => {
      socket.emit('get all messages');
    });
    socket.on('all messages', function(allMsgs){
      for(var i = 0; i < allMsgs.length; i++) {
        addNewMessage(allMsgs[i])
      }
    });
    socket.on('chat message', function(msg){
      addNewMessage(msg)
    });



    function addNewMessage(data) {
      var messageElement = document.createElement("li");
      messageElement.innerHTML = "<b>"+data.msgContent+"</b> from "+data.username+" at <i>"+getDateFromStamp(data.timeStamp)+"</i>";
      document.getElementById("messages").appendChild(messageElement)
    }

    function getDateFromStamp(stamp) {

      var date = new Date(stamp);
      var hours = date.getHours();
      var minutes = "0" + date.getMinutes();
      var seconds = "0" + date.getSeconds();

      // Will display time in 10:30:23 format
      return hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
    }


    async function postData(url = '', data = {}) {
    // Default options are marked with *
    const response = await fetch(url, {
      method: 'POST', // *GET, POST, PUT, DELETE, etc.
      mode: 'cors', // no-cors, *cors, same-origin
      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
      credentials: 'same-origin', // include, *same-origin, omit
      headers: {
        'Content-Type': 'application/json'
        // 'Content-Type': 'application/x-www-form-urlencoded',
      },
      redirect: 'follow', // manual, *follow, error
      referrer: 'no-referrer', // no-referrer, *client
      body: JSON.stringify(data) // body data type must match "Content-Type" header
    });
    return await response; // parses JSON response into native JavaScript objects
  }
  </script>
</html>